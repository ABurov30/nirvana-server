"use strict";var a=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var b=(e,t)=>{for(var n in t)a(e,n,{get:t[n],enumerable:!0})},x=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of y(t))!f.call(e,s)&&s!==n&&a(e,s,{get:()=>t[s],enumerable:!(r=c(t,s))||r.enumerable});return e};var p=e=>x(a({},"__esModule",{value:!0}),e);var d={};b(d,{filterWordListByLength:()=>R});module.exports=p(d);var u=require("../../errors/faker-error");const m={fail:()=>{throw new u.FakerError("No words found that match the given length.")},closest:(e,t)=>{const n=e.reduce((g,l)=>{var h;return(g[l.length]=(h=g[l.length])!=null?h:[]).push(l),g},{}),r=Object.keys(n).map(Number),s=Math.min(...r),o=Math.max(...r),i=Math.min(t.min-s,o-t.max);return e.filter(g=>g.length===t.min-i||g.length===t.max+i)},shortest:e=>{const t=Math.min(...e.map(n=>n.length));return e.filter(n=>n.length===t)},longest:e=>{const t=Math.max(...e.map(n=>n.length));return e.filter(n=>n.length===t)},"any-length":e=>[...e]};function R(e){const{wordList:t,length:n,strategy:r="any-length"}=e;if(n){const s=typeof n=="number"?i=>i.length===n:i=>i.length>=n.min&&i.length<=n.max,o=t.filter(s);return o.length>0?o:typeof n=="number"?m[r](t,{min:n,max:n}):m[r](t,n)}else if(r==="shortest"||r==="longest")return m[r](t);return[...t]}0&&(module.exports={filterWordListByLength});
