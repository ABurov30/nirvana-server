"use strict";var o=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var f=(n,e)=>{for(var t in e)o(n,t,{get:e[t],enumerable:!0})},b=(n,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of l(e))!u.call(n,s)&&s!==t&&o(n,s,{get:()=>e[s],enumerable:!(i=h(e,s))||i.enumerable});return n};var g=n=>b(o({},"__esModule",{value:!0}),n);var c={};f(c,{WordModule:()=>a});module.exports=g(c);var m=require("../../errors/faker-error"),r=require("./filterWordListByLength");class a{constructor(e){this.faker=e;for(const t of Object.getOwnPropertyNames(a.prototype))t==="constructor"||typeof this[t]!="function"||(this[t]=this[t].bind(this))}adjective(e={}){const t=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,r.filterWordListByLength)({...t,wordList:this.faker.definitions.word.adjective}))}adverb(e={}){const t=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,r.filterWordListByLength)({...t,wordList:this.faker.definitions.word.adverb}))}conjunction(e={}){const t=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,r.filterWordListByLength)({...t,wordList:this.faker.definitions.word.conjunction}))}interjection(e={}){const t=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,r.filterWordListByLength)({...t,wordList:this.faker.definitions.word.interjection}))}noun(e={}){const t=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,r.filterWordListByLength)({...t,wordList:this.faker.definitions.word.noun}))}preposition(e={}){const t=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,r.filterWordListByLength)({...t,wordList:this.faker.definitions.word.preposition}))}verb(e={}){const t=typeof e=="number"?{length:e}:e;return this.faker.helpers.arrayElement((0,r.filterWordListByLength)({...t,wordList:this.faker.definitions.word.verb}))}sample(e={}){const t=this.faker.helpers.shuffle([this.adjective,this.adverb,this.conjunction,this.interjection,this.noun,this.preposition,this.verb]);for(const i of t)try{return i(e)}catch{continue}throw new m.FakerError("No matching word data available for the current locale")}words(e={}){typeof e=="number"&&(e={count:e});const{count:t={min:1,max:3}}=e;return this.faker.helpers.multiple(()=>this.sample(),{count:t}).join(" ")}}0&&(module.exports={WordModule});
